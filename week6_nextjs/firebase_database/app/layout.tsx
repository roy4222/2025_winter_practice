// 導入 Next.js 的 Metadata 類型，用於定義頁面元數據
import type { Metadata } from "next";
// 導入 Geist 和 Geist_Mono 字體，這些是從 Google Fonts 提供的現代化字體
import { Geist, Geist_Mono } from "next/font/google";
// 導入全局 CSS 樣式
import "./globals.css";
// 導入 React 的 Suspense 組件，用於處理異步加載的內容
import { Suspense } from "react";
// 導入自定義的 Loading 組件，作為加載狀態的顯示
import Loading from "./loading";
// 導入 HeaderRefactored 組件
import HeaderRefactored from "./components/HeaderRefactored";
import { AuthProvider } from './(auth)/context/AuthContext';
import { Toaster } from 'react-hot-toast';

// 配置 Geist Sans 字體
// variable: 定義 CSS 變數名稱，可在全局樣式中引用
// subsets: 指定要加載的字符集，這裡只加載拉丁字符以優化性能
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

// 配置 Geist Mono 字體（等寬字體，適合顯示代碼）
// 配置方式與 geistSans 相同
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// 定義網站的元數據，包括標題和描述
// 這些信息會被用於 SEO 和瀏覽器標籤顯示
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// 根佈局組件，所有頁面都會被包裹在這個佈局中
// 參數 children 是一個 React 節點，代表頁面的主要內容
// Readonly 表示這個參數是只讀的，不應該被修改
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="zh-Hant" suppressHydrationWarning>
      {/* 
        suppressHydrationWarning 屬性用於抑制由於客戶端和服務器端渲染差異導致的警告
        通常用於有動態內容的頁面，例如使用了瀏覽器API或有用戶特定內容的頁面
      */}
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased relative min-h-screen`}>
        <AuthProvider>
          {/* 固定在頂部的導航欄 */}
          <HeaderRefactored />
          
          {/* 主要內容區域，添加頂部內邊距以避免被固定的導航欄覆蓋 */}
          <div className="pt-16 pb-12">
            <Suspense fallback={<p className="text-center py-4">載入中...</p>}>
              {children}
            </Suspense>
          </div>
          
          {/* Toast 通知組件 */}
          <Toaster
            position="top-right"
            toastOptions={{
              duration: 3000,
              style: {
                background: '#363636',
                color: '#fff',
                fontWeight: 500,
              },
              success: {
                style: {
                  background: '#22c55e',
                },
              },
              error: {
                style: {
                  background: '#ef4444',
                },
              },
            }}
          />
        </AuthProvider>
      </body>
    </html>
  );
} 