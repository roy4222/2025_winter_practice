// 導入 Next.js 的 Metadata 類型，用於定義頁面元數據
import type { Metadata } from "next";
// 導入 Geist 和 Geist_Mono 字體，這些是從 Google Fonts 提供的現代化字體
import { Geist, Geist_Mono } from "next/font/google";
// 導入全局 CSS 樣式
import "./globals.css";
// 導入 React 的 Suspense 組件，用於處理異步加載的內容
import { Suspense } from "react";
// 導入自定義的 Loading 組件，作為加載狀態的顯示
import Loading from "./loading";

// 配置 Geist Sans 字體
// variable: 定義 CSS 變數名稱，可在全局樣式中引用
// subsets: 指定要加載的字符集，這裡只加載拉丁字符以優化性能
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

// 配置 Geist Mono 字體（等寬字體，適合顯示代碼）
// 配置方式與 geistSans 相同
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// 定義網站的元數據，包括標題和描述
// 這些信息會被用於 SEO 和瀏覽器標籤顯示
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// 根佈局組件，所有頁面都會被包裹在這個佈局中
// 參數 children 是一個 React 節點，代表頁面的主要內容
// Readonly 表示這個參數是只讀的，不應該被修改
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    // 設定 HTML 文檔的語言為英文
    <html lang="en">
      {/* 
        body 標籤應用了以下類名：
        - geistSans.variable 和 geistMono.variable: 使字體變數在全局可用
        - antialiased: 使文字渲染更平滑
        - relative: 設置相對定位，作為子元素的定位參考
        - min-h-screen: 確保 body 至少與視窗一樣高
      */}
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased relative min-h-screen`}>
        {/* 
          Suspense 組件用於處理異步加載的內容：
          - 當內容正在加載時，顯示 fallback 中的 Loading 組件
          - 加載完成後，顯示 children（頁面主要內容）
        */}
        <Suspense fallback={<Loading />}>
          {children}
        </Suspense>
      </body>
    </html>
  );
} 